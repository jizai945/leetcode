// 卫星
// 众所周知，在每一个彗星后都有一只 UFO 。这些 UFO 时常来收集地球上的忠诚支持者。不幸的是，他们的飞碟每次出行都只能带上一组支持者。因此，他们要用一种聪明的方案让这些小组提前知道谁会被彗星带走。他们为每个彗星起了一个名字，通过这些名字来决定这个小组是不是被带走的那个特定的小组（你认为是谁给这些彗星取的名字呢？）。关于如何搭配的细节会在下面告诉你；你的任务是写一个程序，通过小组名和彗星名来决定这个小组是否能被那颗彗星后面的 UFO 带走。

// 小组名和彗星名都以下列方式转换成一个数字：最终的数字就是名字中所有字母的积，其中 "A" 是  ，"Z" 是  。例如，"USACO" 小组就是 。如果小组的数字  等于彗星的数字  , 你就得告诉这个小组需要准备好被带走！（记住 “  "是  除以  的余数； 等于  ）

// 写出一个程序，读入彗星名和小组名并算出用上面的方案能否将两个名字搭配起来，如果能搭配，就输出 “ GO ” ，否则输出 “ STAY ” 。小组名和彗星名均是没有空格或标点的一串大写字母（不超过  个字母）。

// 题目要求
// 外星人希望通过面向对象的方法实现：

// 使用类内的私有变量存储彗星和队伍的名字
// 通过属性为 public 的函数来访问类内的私有变量，以及判断是否带走这个小组的支持者


#include <iostream>
#include <string>
using namespace std;


class UFO {
private:
    string _comet;
    string _group;

public:
    UFO() {
        cin >> _comet >> _group;
    }
    ~UFO() {

    }

    bool can_take_away() {
        int c = 1, g = 1;
        for (auto ch: _comet) {
            c *= (ch - 'A' + 1);
        }
        for (auto ch: _group) {
            g *= (ch - 'A' + 1);
        }

        return c%47 == g%47;
    }

};

int main() {
    UFO ufo;
    cout << (ufo.can_take_away()? "GO" : "STAY") << endl;

    return 0;
}